<!--
EventBus Build
-->
<project name="EventBus" default="dist" basedir=".">

    <property name="src" value="./src"/>
    <property name="build" value="./build"/>
    <property name="classes" value="${build}/classes"/>
    <property name="dist"  value="./dist"/>
    <property name="apidoc" value="${build}/doc/api"/>
    <property name="test" value="./test"/>
    <property name="testSrc" value="${test}/src"/>
    <property name="testClasses" value="${build}/test/classes"/>
    <property name="testLib" value="${test}/lib"/>
    <property name="junitOutput" value="${build}/test"/>
    <property name="junitXml" value="${junitOutput}/xml"/>
    <property name="junitHtml" value="${junitOutput}/html"/>
    <property name="coverage" value="${build}/coverage" />
    <property name="coverageClasses" value="${coverage}/classes"/>
    <property name="coverageReport" value="${coverage}/report"/>

    <path id="emma.lib" >
        <pathelement location="${testLib}/emma.jar" />
        <pathelement location="${testLib}/emma_ant.jar" />
    </path>
    <taskdef resource="emma_ant.properties" classpathref="emma.lib" />

    <target name="clean" description="Wipes out the build, doc and distribution directories.">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="-init">
        <echo>Project: ${ant.project.name}</echo>
        <tstamp>
            <format property="build.start.time" pattern="yyyy-MM-dd hh:mm aa"/>
        </tstamp>
        <echo>Build Directory: ${build}</echo>
        <echo>Build Started: ${build.start.time}</echo>
        <echo>Java version: ${ant.java.version}</echo>
        <mkdir dir="${build}"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${testClasses}"/>
        <mkdir dir="${coverageClasses}"/>
        <mkdir dir="${coverageReport}"/>
    </target>

   <target name="compileSource" depends="-init" description="Compiles the source.">
       <echo message="classes = ${classes}"/>
       <javac srcdir="${src}" destdir="${classes}" debug="false" source="1.5" target="1.5">
         <classpath path="./lib/jdic.jar"/>
         <classpath path="./lib/commons-logging-1.1.jar"/>
         <classpath path="./lib/commons-logging-adapters-1.1.jar"/>
         <classpath path="./lib/commons-logging-api-1.1.jar"/>
         <classpath path="./lib/log4j-1.2.15.jar"/>
       </javac>
    </target>

    <target name="compileTest" depends="compileSource" description="Compiles the test source.">
      <javac srcdir="${testSrc}" destdir="${testClasses}"  debug="true" source="1.5" target="1.5">
         <classpath>
            <pathelement path="${classes}"/>
            <fileset dir="${testLib}" includes="*.jar"/>
         </classpath>
      </javac>
    </target>

    <target name="test" description="Runs all tests." depends="compileTest">
      <delete dir="${junitXml}"/>
      <delete dir="${junitHtml}"/>
      <mkdir dir="${junitXml}"/>

      <property name="haltOnFailure" value="yes"/>
      <property name="testCase" value="Test*"/>
      <property name="testPackage" value="**"/>

      <echo>testing ${testClasses}/${testPackage}/${testCase}</echo>

      <junit printsummary="withOutAndErr" haltonfailure="${haltOnFailure}" fork="true" timeout="60000">
         <classpath>
           <pathelement path="${coverageClasses}"/>
           <pathelement path="${classes}"/>
           <pathelement path="${testClasses}"/>
           <pathelement path="."/>
           <pathelement path="${emma}/emma.jar" />
           <fileset dir="${testLib}" includes="*.jar"/>
         </classpath>
         <jvmarg value="-Demma.coverage.out.file=${coverage}/coverage.emma" />
         <jvmarg value="-Demma.coverage.out.merge=true"/>
         <jvmarg value="-Djava.util.logging.config.file=${test}/testlogging.properties" />
         <formatter type="xml" />
         <batchtest fork="yes" todir="${junitXml}">
            <fileset dir="${testClasses}">
               <include name="${testPackage}/${testCase}.class" />
               <!-- exclude inner classes -->
               <exclude name="**/*$*.class"/>
            </fileset>
         </batchtest>
      </junit>
    </target>

    <target name="testReport" description="Creates a junit test report." depends="test">
        <delete dir="${junitHtml}"/>
        <mkdir dir="${junitHtml}"/>
        <junitreport todir="${junitHtml}">
            <fileset dir="${junitXml}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junitHtml}"/>
        </junitreport>
    </target>

    <target name="instrumentEmma" depends="compileTest" description="Instrument classes with EMMA" >
        <emma>
           <instr instrpath="${classes}" destdir="${coverageClasses}"
               metadatafile="${coverage}/metadata.emma"
               merge="true">
              <filter includes="org.bushe.swing.event.*" />              
           </instr>
        </emma>
    </target>

    <target name="testWithEmma" depends="instrumentEmma, test, testReport" description="Run test instrumented with emma and create the emma report.">
       <emma>
          <report sourcepath="${src}">
             <fileset dir="${coverage}">
                <include name="*.emma"/>
             </fileset>
             <html outfile="${coverageReport}/coverage.html"/>
          </report>
        </emma>
    </target>

    <target name="doc" description="Creates the documention (but not the doc jar)." depends="-init">
        <mkdir dir="${apidoc}"/>
        <javadoc  destdir="${apidoc}" author="true" version="true" use="true"
           windowtitle="${ant.project.name}">
           <fileset dir="${src}" defaultexcludes="yes">
              <include name="org/**/*.java" />
           </fileset>
           <docTitle><![CDATA[<h1>${ant.project.name}</h1>]]></docTitle>
           <tag name="todo" scope="all" description="To do:" />
        </javadoc>
    </target>

    <target name="jar" depends="compileTest" description="Creates the binary jar distribution.">
      <jar jarfile="${dist}/${ant.project.name}.jar" basedir="${classes}"/>
    </target>

    <target name="alljars" depends="jar"
            description="Creates the binary, source, doc and all-in-one jar distibutions.">
        <jar jarfile="${dist}/${ant.project.name}-src.jar" basedir="${src}"/>
        <jar jarfile="${dist}/${ant.project.name}-doc.jar" basedir="${apidoc}"/>
        <jar jarfile="${dist}/${ant.project.name}-all.jar">
            <fileset dir="${classes}"/>
            <fileset dir="${src}"/>
            <fileset dir="${testClasses}"/>
            <fileset dir="${testSrc}"/>
            <fileset dir="${apidoc}"/>
        </jar>
    </target>

   <target name="copyToWeb">
      <copy file="${dist}/EventBus.jar" todir="./www" overwrite="yes"/>
      <copy file="${dist}/EventBus-src.jar" todir="./www" overwrite="yes"/>
      <copy file="${dist}/EventBus-doc.jar" todir="./www" overwrite="yes"/>
      <copy file="${dist}/EventBus-all.jar" todir="./www" overwrite="yes"/>
      <copy todir="./www/doc">
            <fileset dir="${build}/doc"/>
      </copy>
   </target>

    <target name="dist" depends="clean, testWithEmma, testReport, doc, alljars, copyToWeb"
            description="Creates the binary, source, doc and all-in-one jar distibutions."/>
</project>
